!input package
!input typing
@package lang.oracle
@import lang[trace]
@import lang.typing[True]

let yield_ev = event
let num_yielded = 0
let yield = func() {
    num_yielded = num_yielded + 1
    wait yield_ev
}
@export yield

let Delayed = type[at, fut]
# let delayed_notifies
let sleep = func(duration) {
    # TODO
}

spawn func() {
    loop {
        intrinsic oracle_advance_event[oracle_advance]
        wait oracle_advance

        match num_yielded != 0 case True {
            notify yield_ev
            yield_ev = event
            num_yielded = 0
            continue
        }

        trace("[oracle] exit")
        break
    }
}
